# vim: ft=colortemplate fdm=marker cc=22

# Markdown: {{{
markdownCodeDelimiter -> Aqua
markdownBoldDelimiter -> Grey
markdownLinkText -> Purple
markdownHeadingDelimiter -> Grey
markdownListMarker -> Red
markdownOrderedListMarker -> Red
markdownRule -> Purple
markdownHeadingRule -> Purple
markdownId -> Yellow

mkdCodeDelimiter -> Aqua
mkdBold -> Grey
mkdLink -> Purple
mkdHeading -> Grey
mkdListItem -> Red
mkdRule -> Purple
mkdDelimiter -> Grey
mkdId -> Yellow
# }}}
# ReStructuredText{{{
rstSubstitutionReference -> Blue
rstInterpretedTextOrHyperlinkReference -> Aqua
rstTableLines -> Grey
#}}}
# LaTex{{{
texStatement -> Green
texOnlyMath -> Grey
texDefName -> Yellow
texNewCmd -> Orange
texCmdName -> Blue
texBeginEnd -> Red
texBeginEndName -> Blue
texDocType -> Orange
#}}}
# Html: {{{
htmlTag -> Orange
htmlEndTag -> Yellow
htmlTagName -> Orange
htmlArg -> Aqua
htmlScriptTag -> Purple
htmlSpecialTagName -> Blue
# # }}}
# Xml: {{{
xmlTag -> Orange
xmlEndTag -> Yellow
xmlTagName -> Orange
xmlEqual -> Orange
xmlAttrib -> Aqua
xmlEntity -> Red
xmlEntityPunct -> Red
xmlDocTypeDecl -> Grey
xmlDocTypeKeyword -> Purple
xmlCdataStart -> Grey
xmlCdataCdata -> Purple
# # }}}
# CSS: {{{
cssAttrComma -> White
cssBraces -> White
cssClassNameDot -> Blue
cssClassName -> Blue
cssFunctionName -> Yellow
cssAttr -> Orange
cssProp -> Aqua
cssCommonAttr -> Yellow
cssImportant -> Red
cssSelectorOp -> Orange
cssSelectorOp2 -> Orange
cssColor -> White
# }}}
# JavaScript: {{{
javaScriptFunction -> Aqua
javaScriptOperator -> Red
javaScriptIdentifier -> Orange
javaScriptMember -> Blue
javaScriptNull -> Yellow
javaScriptParens -> White
javaScriptBraces -> White

jsFunction -> Red
jsThis -> Yellow
jsGlobalNodeObjects -> Purple
jsGlobalObjects -> Yellow
jsArrowFunction -> Purple
jsObjectProp -> Blue
jsVariableDef -> Blue
jsBlockLabel -> Orange
jsFrom -> Red
jsModuleKeyword -> Aqua
jsFuncArgs -> Green
jsParen -> Green
# }}}
# TypeScript: {{{
typescriptBraces -> White
typescriptEndColons -> White
typescriptParens -> White
typescriptStatement -> Purple
typescriptLogicSymbols -> Aqua
typescriptNull -> Aqua
typescriptOperator -> Aqua
typescriptExceptions -> Purple
typescriptInterpolation -> Aqua
typescriptInterpolationDelimiter -> Aqua

typescriptImport -> Purple
typescriptBOM -> Aqua
typescriptVariable -> Orange
typescriptVariableDeclaration -> Blue
typescriptAssign -> Orange
typescriptExport -> Purple
typescriptAliasDeclaration -> Aqua
typescriptDefault -> Orange
typescriptReadonlyModifier -> Orange
typescriptIdentifier -> Blue
typescriptArrowFunc -> Aqua
typescriptBinaryOp -> Orange
typescriptFuncComma -> White
typescriptDOMDocMethod -> Yellow
typescriptEnum -> Aqua
typescriptArrowFuncArg -> Aqua
typescriptBOMNavigatorProp -> Aqua
typescriptCall -> Blue
typescriptOptionalMark -> Orange
typescriptTypeReference -> Aqua
typescriptCase -> Orange
typescriptObjectLabel -> Blue
typescriptTypeParameter -> Yellow
typescriptCastKeyword -> Orange
# }}}
# # Python: {{{
# pythonBuiltin -> Orange
# pythonBuiltinObj -> Orange
# pythonBuiltinFunc -> Orange
# pythonFunction -> Aqua
# pythonDecorator -> Red
# pythonInclude -> Include
# pythonImport -> PreProc
# pythonRun -> Blue
# pythonCoding -> Blue
# pythonOperator -> Orange
# pythonException -> Red
# pythonExceptions -> Purple
# pythonBoolean -> Purple
# pythonConditional -> Red
# pythonRepeat -> Red
# pythonDottedName -> GreenBold
# pythonDot -> Grey
# # }}}
# # PureScript: {{{
# purescriptModuleKeyword -> Aqua
# purescriptModuleName -> White
# purescriptWhere -> Aqua
# purescriptDelimiter -> White
# purescriptType -> White
# purescriptImportKeyword -> Aqua
# purescriptHidingKeyword -> Aqua
# purescriptAsKeyword -> Aqua
# purescriptStructure -> Aqua
# purescriptOperator -> Orange
# purescriptTypeVar -> White
# purescriptConstructor -> White
# purescriptFunction -> White
# purescriptConditional -> Orange
# purescriptBacktick -> Orange
# # }}}
# # CoffeeScript: {{{
# coffeeExtendedOp -> Orange
# coffeeSpecialOp -> White
# coffeeDotAccess -> Grey
# coffeeCurly -> Orange
# coffeeParen -> White
# coffeeBracket -> Orange
# # }}}
# # Java: {{{
# javaAnnotation -> Blue
# javaDocTags -> Aqua
# javaParen -> White
# javaParen1 -> White
# javaParen2 -> White
# javaParen3 -> White
# javaParen4 -> White
# javaParen5 -> White
# javaOperator -> Orange
# javaVarArg -> Green
# javaCommentTitle -> vimCommentTitle
# # }}}
# # Go: {{{
# goDirective -> Aqua
# goConstants -> Purple
# goDeclaration -> Red
# goDeclType -> Blue
# goBuiltins -> Orange
# # }}}
# # Rust: {{{
# rustSigil -> Orange
# rustEscape -> Aqua
# rustStringContinuation -> Aqua
# rustEnum -> Aqua
# rustStructure -> Aqua
# rustDefault -> Aqua
# rustModPathSep -> Grey
# rustCommentLineDoc -> Comment
# # }}}
# # Ruby: {{{
# rubyStringDelimiter -> Green
# rubyInterpolationDelimiter -> Aqua
# # }}}
# # Lua: {{{
# luaIn -> Red
# luaFunction -> Aqua
# luaTable -> Orange
# # }}}
# # MoonScript: {{{
# moonSpecialOp -> White
# moonExtendedOp -> Orange
# moonFunction -> White
# moonObject -> Yellow
# # }}}
# # Elixir: {{{
# elixirStringDelimiter -> Green
# elixirInterpolationDelimiter -> Aqua
# elixirModuleDeclaration -> Yellow
# elixirDocString -> Comment
# # }}}
# # Clojure: {{{
# clojureKeyword -> Blue
# clojureCond -> Orange
# clojureSpecial -> Orange
# clojureDefine -> Orange
# clojureFunc -> Yellow
# clojureRepeat -> Yellow
# clojureCharacter -> Aqua
# clojureStringEscape -> Aqua
# clojureException -> Red
# clojureRegexp -> Aqua
# clojureRegexpEscape -> Aqua
# clojureAnonArg -> Yellow
# clojureVariable -> Blue
# clojureMacro -> Orange
# clojureMeta -> Yellow
# clojureDeref -> Yellow
# clojureQuote -> Yellow
# clojureUnquote -> Yellow
# clojureRegexpMod -> clojureRegexpCharClass
# clojureRegexpQuantifier -> clojureRegexpCharClass
# clojureRegexpCharClass -> GreyBold
# clojureParen -> White
# # }}}
# # Scala: {{{
# scalaNameDefinition -> White
# scalaCaseFollowing -> White
# scalaCapitalWord -> White
# scalaTypeExtension -> White
# scalaKeyword -> Red
# scalaKeywordModifier -> Red
# scalaSpecial -> Aqua
# scalaOperator -> Orange
# scalaTypeDeclaration -> Yellow
# scalaTypeTypePostDeclaration -> Yellow
# scalaInstanceDeclaration -> White
# scalaInterpolation -> Aqua
# # }}}
# # Haskell: {{{
# haskellType -> Blue
# haskellIdentifier -> Aqua
# haskellSeparator -> LightGrey
# haskellDelimiter -> White
# haskellOperators -> Green
# haskellBacktick -> Orange
# haskellStatement -> Purple
# haskellConditional -> Purple
# haskellLet -> Red
# haskellDefault -> Red
# haskellWhere -> Red
# haskellDeclKeyword -> Orange
# haskellDecl -> Orange
# haskellDeriving -> Purple
# haskellAssocType -> Aqua
# haskellNumber -> Aqua
# haskellForeignKeywords -> Green
# haskellKeyword -> Red
# haskellFloat -> Aqua
# haskellInfix -> Purple
# haskellRecursiveDo -> Purlpe
# haskellQuotedType -> Red
# haskellPreProc -> LightGrey
# haskellTypeForall -> Red
# haskellPatternKeyword -> Blue
# haskellBottom -> RedBold
# haskellTH -> AquaBold
# haskellImportKeywords -> PurpleBold
# haskellPragma -> RedBold
# haskellQuote -> GreenBold
# haskellShebang -> YellowBold
# haskellLiquid -> PurpleBold
# haskellQuasiQuoted -> BlueBold
# haskellTypeRoles -> RedBold
# # }}}
# # Perl{{{
# perlStatementPackage -> PreProc
# perlStatementInclude -> PreProc
# perlStatementStorage -> StorageClass
# perlStatementList -> StorageClass
# perlVarSimpleMemberName -> Type
# perlMethod -> Function
# podCommand -> StorageClass
# podCmdText -> Macro
# podVerbatimLine -> String
# #}}}
# # Json: {{{
# jsonKeyword -> Green
# jsonQuote -> Green
# jsonBraces -> White
# jsonString -> White
# # }}}
# # Yaml{{{
# yamlKey -> Aqua
# yamlConstant -> Purlpe
# #}}}
# # Toml{{{
# tomlTable -> Orange
# tomlTableArray -> Orange
# tomlKey -> White
# #}}}
# # Mail: {{{
# mailHeader -> Blue
# mailHeaderKey -> Blue
# mailHeaderEmail -> Blue
# mailSubject -> Blue
# mailQuoted1 -> Aqua
# mailQuoted2 -> Purple
# mailQuoted3 -> Yellow
# mailQuoted4 -> Green
# mailQuoted5 -> Red
# mailQuoted6 -> Orange
# mailQuotedExp1 -> Aqua
# mailQuotedExp2 -> Purple
# mailQuotedExp3 -> Yellow
# mailQuotedExp4 -> Green
# mailQuotedExp5 -> Red
# mailQuotedExp6 -> Orange
# # mailVerbatim -> Red
# mailSignature -> White
# mailURL -> Orange
# mailEmail -> Orange
# # }}}
# # C#: {{{
# csBraces -> White
# csEndColon -> White
# csLogicSymbols -> Purple
# csParens -> White
# csOpSymbols -> Orange
# csInterpolationDelimiter -> Aqua
# csInterpolationFormat -> Aqua
# csInterpolationAlignDel -> AquaBold
# csInterpolationFormatDel -> AquaBold
# # }}}
# # Sh{{{
# shRange -> White
# shTestOpr -> Purple
# shOption -> Purple
# bashStatement -> Orange
# shOperator -> Orange
# shQuote -> Green
# shSet -> Orange
# shSetList -> Blue
# shSnglCase -> Orange
# shVariable -> Blue
# shCmdSubRegion -> Green
# #}}}
# # Zsh{{{
# zshVariableDef -> Blue
# zshSubst -> Orange
# zshOptStart -> Orange
# zshOption -> Aqua
# zshFunction -> Green
# #}}}
# # Vim: {{{
# vimNotation -> Orange
# vimBracket -> Orange
# vimMapModKey -> Purple
# vimMapMod -> Purple
# vimFuncSID -> LightGrey
# vimSetSep -> LightGrey
# vimSep -> LightGrey
# vimContinue -> LightGrey
# vimLet -> Orange
# vimAutoCmd -> Orange
# # }}}
# # Diff{{{
# diffAdded -> Green
# diffRemoved -> Red
# diffChanged -> Yellow
# diffOldFile -> Purple
# diffNewFile -> Blue
# diffFile -> Orange
# diffLine -> Grey
# diffIndexLine -> Aqua
# #}}}
# # Help{{{
# helpHyperTextEntry -> Red
# helpHyperTextJump -> Blue
# helpSectionDelim -> Grey
# helpExample -> Green
# helpCommand -> Orange
# helpHeadline -> Title
# helpHeader -> Aqua
# helpSpecial -> Yellow
# #}}}
